--- oasys-1.3.0/tclcmd/TclCommand.cc.tcl86	2010-01-30 19:41:33.000000000 +0100
+++ oasys-1.3.0/tclcmd/TclCommand.cc	2010-01-30 19:46:50.000000000 +0100
@@ -71,7 +71,7 @@
     if (Tcl_Init(interp_) != TCL_OK) {
         StringBuffer err("initialization problem calling Tcl_Init: %s\n"
                          "(this is not a fatal error, continuing initialization...)\n\n",
-                         interp_->result);
+                         Tcl_GetStringResult(interp_));
         log_multiline(LOG_WARN, err.c_str());
     }
 
@@ -100,7 +100,7 @@
     // overwrite the string value)
     char* cmd = strdup(INIT_COMMAND);
     if (Tcl_Eval(interp_, cmd) != TCL_OK) {
-        log_err("error in init commands: \"%s\"", interp_->result);
+        log_err("error in init commands: \"%s\"", Tcl_GetStringResult(interp_));
         return TCL_ERROR;
     }
     free(cmd);
@@ -164,7 +164,7 @@
     
     if (err != TCL_OK) {
         logf(LOG_ERR, "error: line %d: '%s':\n%s",
-             interp_->errorLine, Tcl_GetStringResult(interp_),
+             Tcl_GetErrorLine(interp_), Tcl_GetStringResult(interp_),
              Tcl_GetVar(interp_, "errorInfo", TCL_GLOBAL_ONLY));
     }
     
@@ -194,7 +194,7 @@
     
     if (err != TCL_OK) {
         logf(LOG_ERR, "error: line %d: '%s':\n%s",
-             interp_->errorLine, Tcl_GetStringResult(interp_),
+             Tcl_GetErrorLine(interp_), Tcl_GetStringResult(interp_),
              Tcl_GetVar(interp_, "errorInfo", TCL_GLOBAL_ONLY));
     }
     
@@ -212,7 +212,7 @@
     
     if (err != TCL_OK) {
         logf(LOG_ERR, "error: line %d: '%s':\n%s",
-             interp_->errorLine, Tcl_GetStringResult(interp_),
+             Tcl_GetErrorLine(interp_), Tcl_GetStringResult(interp_),
              Tcl_GetVar(interp_, "errorInfo", TCL_GLOBAL_ONLY));
     }
     
@@ -226,7 +226,7 @@
     StringBuffer cmd("set command_logpath %s", logpath());
     if (Tcl_Eval(interp_, const_cast<char*>(cmd.c_str())) != TCL_OK) {
         log_err("tcl error setting command_logpath: \"%s\"",
-                interp_->result);
+                Tcl_GetStringResult(interp_));
     }
 }
 
@@ -241,7 +241,7 @@
     
     if (Tcl_Eval(interp_, const_cast<char*>(cmd.c_str())) != TCL_OK) {
         log_err("tcl error starting command_server: \"%s\"",
-                interp_->result);
+                Tcl_GetStringResult(interp_));
     }
 }
 
@@ -257,7 +257,7 @@
 #endif
     
     if (Tcl_Eval(interp_, const_cast<char*>(cmd.c_str())) != TCL_OK) {
-        log_err("tcl error in command_loop: \"%s\"", interp_->result);
+        log_err("tcl error in command_loop: \"%s\"", Tcl_GetStringResult(interp_));
     }
 }
 
@@ -267,7 +267,7 @@
 {
     set_command_logpath();
     if (Tcl_Eval(interp_, "event_loop") != TCL_OK) {
-        log_err("tcl error in event_loop: \"%s\"", interp_->result);
+        log_err("tcl error in event_loop: \"%s\"", Tcl_GetStringResult(interp_));
     }
 }
 
@@ -276,7 +276,7 @@
 TclCommandInterp::exit_event_loop()
 {
     if (Tcl_Eval(interp_, "exit_event_loop") != TCL_OK) {
-        log_err("tcl error in event_loop: \"%s\"", interp_->result);
+        log_err("tcl error in event_loop: \"%s\"", Tcl_GetStringResult(interp_));
     }
 }
 
